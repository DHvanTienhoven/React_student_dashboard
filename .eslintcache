[{"C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\index.js":"1","C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\App.js":"2","C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\reportWebVitals.js":"3","C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\Nav.js":"4","C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\Data\\studentdata.js":"5","C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\Chart.js":"6","C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\Header.js":"7","C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\Main.js":"8","C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\StudentContext.js":"9","C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\StudentComponent.js":"10","C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\Student.js":"11","C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\SelectAssignments.js":"12","C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\SortContext.js":"13","C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\SortButtons.js":"14","C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\Dropdown.js":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":771,"mtime":1611830772809,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":1323,"mtime":1611925044112,"results":"20","hashOfConfig":"17"},{"size":40471,"mtime":1611787398367,"results":"21","hashOfConfig":"17"},{"size":10988,"mtime":1612279335934,"results":"22","hashOfConfig":"17"},{"size":430,"mtime":1611927370904,"results":"23","hashOfConfig":"17"},{"size":611,"mtime":1611928832444,"results":"24","hashOfConfig":"17"},{"size":426,"mtime":1611831420187,"results":"25","hashOfConfig":"17"},{"size":844,"mtime":1611928861551,"results":"26","hashOfConfig":"17"},{"size":927,"mtime":1611930067988,"results":"27","hashOfConfig":"17"},{"size":1555,"mtime":1611928595743,"results":"28","hashOfConfig":"17"},{"size":378,"mtime":1611831427323,"results":"29","hashOfConfig":"17"},{"size":1754,"mtime":1611854643014,"results":"30","hashOfConfig":"17"},{"size":1146,"mtime":1611927334263,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"10sbkox",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\index.js",[],["67","68"],"C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\App.js",[],"C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\reportWebVitals.js",[],"C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\Nav.js",["69"],"import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { StudentContext } from './StudentContext';\r\nimport Student from './Student'\r\nimport { SortContext } from './SortContext';\r\n\r\n\r\nconst Nav = ({ pagename }) => {\r\n\r\n    const [students, setStudents] = useContext(StudentContext);\r\n\r\n    const selectAllStudents = () => {\r\n        const newStudents = [...students]\r\n        newStudents.map(item => item.checked = true)\r\n        setStudents(newStudents)\r\n    };\r\n\r\n    const [sort, setSort] = useContext(SortContext);\r\n\r\n    const setDefault = () => {\r\n        const newStudents = [...students]\r\n        newStudents.map(item => item.checked = true)\r\n        newStudents[0].assignments.map(item => item.checked = true)\r\n        setStudents(newStudents)\r\n        setSort({ moeilijk: false, leuk: false })\r\n    };\r\n\r\n    return (\r\n        <div className=\"nav\">\r\n            <ul>\r\n                {pagename && <li key=\"home\"><Link to=\"/\" onClick={() => setDefault()}>Home</Link></li>}\r\n                {students.map((student, index) => <Student key={index} student={student} pagename={pagename} index={index} />)}\r\n            </ul>\r\n            {!pagename && <button onClick={() => selectAllStudents()}>Selecteer alle studenten</button>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Nav\r\n","C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\Data\\studentdata.js",[],"C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\Chart.js",["70","71"],"import React, { useContext } from 'react';\r\nimport { VictoryBar, \r\n        VictoryChart, \r\n        VictoryGroup, \r\n        VictoryLegend, \r\n        VictoryLabel, \r\n        VictoryAxis, \r\n        VictoryLine, \r\n        VictoryTooltip } from 'victory';\r\nimport { StudentContext } from './StudentContext';\r\nimport { SortContext } from './SortContext';\r\n\r\n\r\nconst Chart = ({ pagename }) => {\r\n\r\n    const [students, setStudents] = useContext(StudentContext)\r\n\r\n    const filterStudents = () => {\r\n        if (pagename) {\r\n            return students.filter(student => student.name === pagename)\r\n        } else {\r\n            return students.filter(student => student.checked)\r\n        }\r\n    };\r\n\r\n    const filteredStudents = filterStudents();\r\n\r\n    const weighedAssignments = students[0].assignments.filter(assignment => assignment.checked).map(item => item.assignmentName);\r\n\r\n    const assembleAssignments = () => {\r\n        const newArray = []\r\n        weighedAssignments.forEach(item => {\r\n            newArray.push(filteredStudents.map(student => student.assignments\r\n                .filter(assignment => assignment.assignmentName === item))\r\n            )\r\n        })\r\n        return newArray\r\n    };\r\n\r\n    const allAssignmentsAssembled = assembleAssignments();\r\n\r\n    const createAverageObjects = () => {\r\n        const newArray = []\r\n        if (filteredStudents.length > 0) {\r\n            allAssignmentsAssembled.forEach(item => {\r\n                if (item[0][0].assignmentName.length < 7) {\r\n                    newArray.push({\r\n                        assignmentName: item[0][0].assignmentName,\r\n                        moeilijk: item.flat().map(item => item.moeilijk).reduce((a, b) => a + b) / item.length,\r\n                        leuk: item.flat().map(item => item.leuk).reduce((a, b) => a + b) / item.length\r\n                    })\r\n                } else {\r\n                    newArray.push({\r\n                        assignmentName: item[0][0].assignmentName.slice(17),\r\n                        moeilijk: item.flat().map(item => item.moeilijk).reduce((a, b) => a + b) / item.length,\r\n                        leuk: item.flat().map(item => item.leuk).reduce((a, b) => a + b) / item.length\r\n                    })\r\n                }\r\n            })\r\n        }\r\n        return newArray\r\n    };\r\n\r\n    const averageObjects = createAverageObjects();\r\n\r\n    const [sort, setSort] = useContext(SortContext);\r\n\r\n    const sortAssignments = array => {\r\n        if (sort.moeilijk) {\r\n            return array.sort((a, b) => b.moeilijk - a.moeilijk)\r\n        } if (sort.leuk) {\r\n            return array.sort((a, b) => b.leuk - a.leuk)\r\n        } else {\r\n            return array\r\n        }\r\n    };\r\n\r\n    const sortedAssignments = sortAssignments(averageObjects);\r\n\r\n    const createxyObject = () => {\r\n        const data = {};\r\n        data.moeilijk = []\r\n        data.leuk = []\r\n        sortedAssignments.forEach(item => {\r\n            data.moeilijk.push({ x: item.assignmentName, y: item.moeilijk })\r\n            data.leuk.push({ x: item.assignmentName, y: item.leuk })\r\n        })\r\n        return data\r\n    };\r\n\r\n    const barData = createxyObject();\r\n\r\n    const getConditiontalLabel = () =>{\r\n        if (pagename){\r\n            return \"Rating\"\r\n        } else{\r\n            return \"Gemiddelde rating van geselecteerde studenten\"\r\n        }\r\n    }\r\n\r\n    const conditionalLabel = getConditiontalLabel()\r\n\r\n    return (\r\n        <div className = \"chartcomponent\">\r\n            {filteredStudents.length > 0 && weighedAssignments.length > 0 &&\r\n                <VictoryChart\r\n                    height={200}>\r\n                    <VictoryLine y={() => 1}\r\n                        style={{\r\n                            data: {\r\n                                stroke: \"#bbbbbb\",\r\n                                strokeWidth: 0.3\r\n                            }\r\n                        }} />\r\n                    <VictoryLine y={() => 2}\r\n                        style={{\r\n                            data: {\r\n                                stroke: \"#bbbbbb\",\r\n                                strokeWidth: 0.3\r\n                            }\r\n                        }} />\r\n                    <VictoryLine y={() => 3}\r\n                        style={{\r\n                            data: {\r\n                                stroke: \"#bbbbbb\",\r\n                                strokeWidth: 0.3\r\n                            }\r\n                        }} />\r\n                    <VictoryLine y={() => 4}\r\n                        style={{\r\n                            data: {\r\n                                stroke: \"#bbbbbb\",\r\n                                strokeWidth: 0.3\r\n                            }\r\n                        }} />\r\n                    <VictoryLine y={() => 5}\r\n                        style={{\r\n                            data: {\r\n                                stroke: \"#bbbbbb\",\r\n                                strokeWidth: 0.3\r\n                            }\r\n                        }} />\r\n                    <VictoryLine y={() => 4.5}\r\n                        style={{\r\n                            data: {\r\n                                stroke: \"#e8e8e8\",\r\n                                strokeWidth: 0.3\r\n                            }\r\n                        }} />\r\n                    <VictoryLine y={() => 0.5}\r\n                        style={{\r\n                            data: {\r\n                                stroke: \"#e8e8e8\",\r\n                                strokeWidth: 0.3\r\n                            }\r\n                        }} />\r\n                    <VictoryLine y={() => 1.5}\r\n                        style={{\r\n                            data: {\r\n                                stroke: \"#e8e8e8\",\r\n                                strokeWidth: 0.3\r\n                            }\r\n                        }} />\r\n                    <VictoryLine y={() => 2.5}\r\n                        style={{\r\n                            data: {\r\n                                stroke: \"#e8e8e8\",\r\n                                strokeWidth: 0.3\r\n                            }\r\n                        }} />\r\n                    <VictoryLine y={() => 3.5}\r\n                        style={{\r\n                            data: {\r\n                                stroke: \"#e8e8e8\",\r\n                                strokeWidth: 0.3\r\n                            }\r\n                        }} />\r\n                    <VictoryGroup offset={160 / weighedAssignments.length}>\r\n                        <VictoryBar\r\n                            data={barData.moeilijk}\r\n                            style={{ data: { fill: 'red' } }}\r\n                            barWidth={130 / weighedAssignments.length}\r\n                            animate={{\r\n                                duration: 1500,\r\n                                onLoad: { duration: 1000 }\r\n                            }}\r\n                            labels={({ datum }) => `${datum.x} \\n moeilijk-rating: ${datum.y.toString().slice(0,3)}` }\r\n                            labelComponent={<VictoryTooltip\r\n                                flyoutWidth={60}\r\n                                flyoutHeight={16}\r\n                                cornerRadius={2}\r\n                                pointerLength={4}\r\n                                pointerWidth={4}\r\n                                flyoutStyle={{\r\n                                    stroke: \"#120faa\",\r\n                                    strokeWidth: 0.6,\r\n                                    fill: \"#ffffa0\"\r\n                                }}\r\n                                style={{ \r\n                                    fontSize: 6, \r\n                                    fill: \"#120faa\"\r\n                                    }}/>} />\r\n                        <VictoryBar\r\n                            data={barData.leuk}\r\n                            style={{ data: { fill: 'gold' } }}\r\n                            barWidth={130 / weighedAssignments.length}\r\n                            animate={{\r\n                                duration: 1500,\r\n                                onLoad: { duration: 1000 }\r\n                            }}\r\n                            labels={({ datum }) => `${datum.x} \\n leuk-rating: ${datum.y.toString().slice(0,3)}` }\r\n                            labelComponent={<VictoryTooltip\r\n                                flyoutWidth={60}\r\n                                flyoutHeight={16}\r\n                                cornerRadius={2}\r\n                                pointerLength={4}\r\n                                pointerWidth={4}\r\n                                flyoutStyle={{\r\n                                    stroke: \"#120faa\",\r\n                                    strokeWidth: 0.6,\r\n                                    fill: \"#ffffa0\"\r\n                                }}\r\n                                style={{ \r\n                                    fontSize: 6, \r\n                                    fill: \"#120faa\"\r\n                                    }}/>} /> \r\n                    </VictoryGroup>\r\n                    <VictoryAxis\r\n                        tickLabelComponent={<VictoryLabel\r\n                            angle={-45}\r\n                            dx={6}\r\n                            dy={-9}\r\n                            style={{ fontSize: 5 }}\r\n                            textAnchor={\"end\"}\r\n                        />}\r\n                    />\r\n                    <VictoryAxis dependentAxis\r\n                        label= {conditionalLabel}\r\n                        domain={[0, 5]}\r\n                        style={{\r\n                            tickLabels:\r\n                                { fontSize: 7 },\r\n                            axisLabel:\r\n                            {\r\n                                fontSize: 6,\r\n                                padding: 35\r\n                            }\r\n                        }} />\r\n                    <VictoryLegend\r\n                        x={150}\r\n                        y = {30}\r\n                        orientation=\"horizontal\"\r\n                        data={[\r\n                            {\r\n                                name: \"moeilijk\",\r\n                                symbol: { fill: 'red' }\r\n                            },\r\n                            {\r\n                                name: \"leuk\",\r\n                                symbol: { fill: 'gold' }\r\n                            }]}\r\n                        style={\r\n                            { labels: { fontSize: 6} }\r\n                            \r\n                        }\r\n                    />\r\n                </VictoryChart>}\r\n            {filteredStudents.length === 0 &&\r\n                <h1>Selecteer alstublieft tenminste één student. </h1>}\r\n            {weighedAssignments.length === 0 &&\r\n                <h1>Selecteer alstublieft tenminste één opdracht.</h1>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Chart\r\n","C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\Header.js",[],"C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\Main.js",[],"C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\StudentContext.js",[],"C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\StudentComponent.js",[],"C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\Student.js",[],"C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\SelectAssignments.js",[],"C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\SortContext.js",[],"C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\SortButtons.js",["72"],"import React, { useContext } from 'react';\r\nimport { SortContext } from './SortContext';\r\n\r\n\r\n\r\nconst SortButtons = () => {\r\n\r\n    const [sort, setSort] = useContext(SortContext);\r\n\r\n    const sortAssignments = e => {\r\n        switch (e.target.value) {\r\n            case \"sortstandard\":\r\n                setSort({ moeilijk: false, leuk: false })\r\n                break;\r\n            case \"sortmoeilijk\":\r\n                setSort({ moeilijk: true, leuk: false })\r\n                break;\r\n            case \"sortleuk\":\r\n                setSort({ moeilijk: false, leuk: true })\r\n                break;\r\n            default:\r\n                setSort({ moeilijk: false, leuk: false })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"sortbuttons\">\r\n            <h3>Sorteer de opdrachten</h3>\r\n            <ul>\r\n                <li>\r\n                    <input type=\"radio\" id=\"standard\"\r\n                        name=\"sortchoice\" value=\"sortstandard\" defaultChecked onChange={(e) => sortAssignments(e)} />\r\n                    <label htmlFor=\"standard\" >Sorteer op opdrachtvolgorde</label>\r\n                </li>\r\n                <li>\r\n                    <input type=\"radio\" id=\"moeilijk\"\r\n                        name=\"sortchoice\" value=\"sortmoeilijk\" onChange={(e) => sortAssignments(e)} />\r\n                    <label htmlFor=\"moeilijk\">Sorteer op 'moeilijk' rating</label>\r\n                </li>\r\n                <li>\r\n                    <input type=\"radio\" id=\"leuk\"\r\n                        name=\"sortchoice\" value=\"sortleuk\" onChange={(e) => sortAssignments(e)} />\r\n                    <label htmlFor=\"leuk\">sorteer op 'leuk'rating</label>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SortButtons\r\n","C:\\Users\\darya\\Desktop\\Winc_Academy\\fullstack\\eindopdracht_student_dashboard\\src\\Components\\Dropdown.js",[],["73","74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":18,"column":12,"nodeType":"81","messageId":"82","endLine":18,"endColumn":16},{"ruleId":"79","severity":1,"message":"83","line":16,"column":22,"nodeType":"81","messageId":"82","endLine":16,"endColumn":33},{"ruleId":"79","severity":1,"message":"84","line":66,"column":18,"nodeType":"81","messageId":"82","endLine":66,"endColumn":25},{"ruleId":"79","severity":1,"message":"80","line":8,"column":12,"nodeType":"81","messageId":"82","endLine":8,"endColumn":16},{"ruleId":"75","replacedBy":"85"},{"ruleId":"77","replacedBy":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'sort' is assigned a value but never used.","Identifier","unusedVar","'setStudents' is assigned a value but never used.","'setSort' is assigned a value but never used.",["87"],["88"],"no-global-assign","no-unsafe-negation"]